{"version":3,"file":"static/js/movies-page.48b6281a.chunk.js","mappings":"8LACA,GAAgB,SAAW,6BAA6B,UAAY,8BAA8B,WAAa,gC,SCyB/G,EAvBmB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAWC,EAAAA,UAAf,SACGJ,EAASK,QAAQC,KAAI,SAAAC,GAAK,OACzB,eAAmBJ,UAAWC,EAAAA,UAA9B,UACE,UAAC,KAAD,CAAMI,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMV,GAAhD,WACE,gBACEW,IACEL,EAAMM,YAAN,yCACsCN,EAAMM,aAD5C,yEAIFC,IAAKP,EAAMQ,MACXC,MAAM,WAER,eAAIb,UAAWC,EAAAA,WAAf,SAA8BG,EAAMQ,YAX/BR,EAAME,W,yFCPvB,EAA4B,8BAA5B,EAAuE,+BAAvE,EAAmH,+BAAnH,EAAiK,iCAAjK,EAA+M,+B,mECwE/M,EA/DmB,WACjB,OAAwCQ,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BL,EAAAA,EAAAA,UAAS,IAAnC,eAAOM,EAAP,KAAcC,EAAd,KAEMC,EAAaJ,EAAaK,IAAI,UAEpCC,EAAAA,EAAAA,YAAU,WACHF,IAGLG,EAAAA,EAAAA,IAAkBH,GAAYI,OAAOA,KAAKV,KACzC,CAACM,KAEJE,EAAAA,EAAAA,YAAU,WACHJ,IAGLK,EAAAA,EAAAA,IAAkBL,GAAOM,OAAOA,KAAKV,KAEpC,CAACE,IAeJ,OACE,iCACE,oBAASlB,UAAWC,EAApB,UACE,kBAAM0B,SAZU,SAAAC,GACpBA,EAAEC,iBACGT,EAILD,EAAgB,CAAEC,MAAAA,IAHhBU,EAAAA,GAAAA,KAAW,6BASsB9B,UAAWC,EAA1C,WACE,kBACED,UAAWC,EACX8B,KAAK,OACLC,YAAY,YACZC,MAAOb,EACPc,SAtBa,SAAAN,GACrBP,EAASO,EAAEO,cAAcF,WAuBnB,mBAAQF,KAAK,SAAS/B,UAAWC,EAAjC,UACE,SAAC,cAAD,CAAsBgC,MAAO,CAAEjC,UAAU,GAAD,OAAKC,IAA7C,UACE,SAAC,MAAD,cAKR,+BACGc,GAA+C,IAA/BA,EAAaqB,gBAC5B,qEAEDrB,IAAgB,SAACsB,EAAA,EAAD,CAAYxC,SAAUkB","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/views/MoviesPage/MoviesPage.module.css?0f72","views/MoviesPage/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cardList\":\"MoviesList_cardList__J9+ip\",\"movieCard\":\"MoviesList_movieCard__d-RFv\",\"movieTitle\":\"MoviesList_movieTitle__CxO8p\"};","import { Link, useLocation } from 'react-router-dom';\nimport s from './MoviesList.module.css';\n\nconst MoviesList = ({ response }) => {\n  const location = useLocation();\n  return (\n    <ul className={s.movieList}>\n      {response.results.map(movie => (\n        <li key={movie.id} className={s.movieCard}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            <img\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n                  : `https://cdn.pixabay.com/photo/2016/03/31/18/36/cinema-1294496_1280.png`\n              }\n              alt={movie.title}\n              width=\"100px\"\n            />\n            <h3 className={s.movieTitle}>{movie.title}</h3>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"moviePage\":\"MoviesPage_moviePage__-o5GH\",\"searchForm\":\"MoviesPage_searchForm__hZx7C\",\"inputQuery\":\"MoviesPage_inputQuery__Tp-IH\",\"searchButton\":\"MoviesPage_searchButton__h5QxT\",\"searchIcon\":\"MoviesPage_searchIcon__s-nCk\"};","import MoviesList from '../../components/MoviesList';\nimport s from './MoviesPage.module.css';\nimport { GoSearch } from 'react-icons/go';\nimport { useEffect, useState } from 'react';\nimport { fetchSearchMovies } from '../../services/fetchMovies';\nimport { toast } from 'react-toastify';\nimport { IconContext } from 'react-icons';\nimport { useSearchParams } from 'react-router-dom';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst MoviesPage = () => {\n  const [searchMovies, setSearchMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams({});\n  const [query, setQuery] = useState('');\n\n  const queryValue = searchParams.get('query');\n\n  useEffect(() => {\n    if (!queryValue) {\n      return;\n    }\n    fetchSearchMovies(queryValue).then().then(setSearchMovies);\n  }, [queryValue]);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    fetchSearchMovies(query).then().then(setSearchMovies);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParams]);\n\n  const onHandleChange = e => {\n    setQuery(e.currentTarget.value);\n  };\n\n  const onQuerySubmit = e => {\n    e.preventDefault();\n    if (!query) {\n      toast.warn('Please, enter movie name');\n      return;\n    }\n    setSearchParams({ query });\n  };\n\n  return (\n    <>\n      <section className={s.moviePage}>\n        <form onSubmit={onQuerySubmit} className={s.searchForm}>\n          <input\n            className={s.inputQuery}\n            type=\"text\"\n            placeholder=\"Search...\"\n            value={query}\n            onChange={onHandleChange}\n          />\n          <button type=\"submit\" className={s.searchButton}>\n            <IconContext.Provider value={{ className: `${s.searchIcon}` }}>\n              <GoSearch />\n            </IconContext.Provider>\n          </button>\n        </form>\n      </section>\n      <section>\n        {searchMovies && searchMovies.total_results === 0 && (\n          <h2>There are no movies matching your search</h2>\n        )}\n        {searchMovies && <MoviesList response={searchMovies} />}\n      </section>\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["response","location","useLocation","className","s","results","map","movie","to","id","state","from","src","poster_path","alt","title","width","useState","searchMovies","setSearchMovies","useSearchParams","searchParams","setSearchParams","query","setQuery","queryValue","get","useEffect","fetchSearchMovies","then","onSubmit","e","preventDefault","toast","type","placeholder","value","onChange","currentTarget","total_results","MoviesList"],"sourceRoot":""}